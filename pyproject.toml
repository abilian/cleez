[project]
authors = [
    {name = "Abilian SAS", email = "sf@abilian.com"},
]
requires-python = "<4,>=3.9"
dependencies = [
    "termcolor ~= 3.0",
]
name = "cleez"
version = "0.1.13"
description = "Simple class-based CLI framework."
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.urls]
homepage = "https://github.com/abilian/cleez"

[dependency-groups]
dev = [
    "abilian-devtools",
    "cruft",
    "toml",
    "devtools<1.0.0,>=0.12.2",
    "snoop",
]

[tool.pdm.build]
includes = ["src/cleez"]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

# ------------------------------------------------------------------

[tool.isort]
profile = "black"

# ------------------------------------------------------------------

# pyproject.toml
[tool.pytest.ini_options]
filterwarnings = [
#    'ignore:.*contextfunction.*:DeprecationWarning',
#    'ignore:.*Unmanaged.*:sqlalchemy.exc.SAWarning'
]
addopts = "--tb=short"
testpaths = [
    "tests",
    "src",
]

# ------------------------------------------------------------------

[tool.ruff.lint]
select = [
    "F",
    "E",
    "C90",
    "I",
    "UP",
    "N",
    "YTT",
    "B",
    "A",
    "C4",
    "ICN",
    "Q",
    "S",
    "BLE",
    "RET",
    "SIM",
    "TID",
    "RUF",
    "PLC", "PLE", "PLR", "PLW",
]
# Add later: "ANN", "ERA"...

exclude = [
    "src/cleez/testing.py",
]

ignore = [
    "S101",  # Use of `assert` detected
    "SIM108", # Use ternary operator
    "A001",  # Shadowing of built-in
    "A002",  # Argument `input` is shadowing a python builtin
    "I001",  # Ruff not agreeing with isort
    "RUF012",  # Mutable class attributes should be annotated
]

# ------------------------------------------------------------------

[tool.bandit]
skips = [
  "B404", # blacklist
  "B603", # subprocess_without_shell_equals_true
]

# ------------------------------------------------------------------

[tool.pyanalyze]
paths = ["src/"]
import_paths = ["."]

# Additional checks
bare_ignore = true
missing_f = true
use_fstrings = true
value_always_true = true

# TODO: fix issues and activate
#unused_ignore = true
#enforce_no_unused = true
#incompatible_override = true
#missing_parameter_annotation = true
#missing_return_annotation = true
#suggested_parameter_type = true
#suggested_return_type = true
#use_fstrings = true
#value_always_true = true

# TODO: fix issues and remove
attribute_is_never_set = false
duplicate_dict_key = false
import_failed = false
impossible_pattern = false
incompatible_argument = false
incompatible_call = false
incompatible_return_value = false
internal_error = false
missing_return = false
possibly_undefined_name = false
undefined_attribute = false
unused_variable = false

# ------------------------------------------------------------------

[tool.deptry]
ignore_obsolete = [
]
ignore_missing = [
]
ignore_transitive = [
]
exclude = [
    '.tox', 'tests', 'sandbox', 'doc', 'scripts',
]

# ------------------------------------------------------------------

[tool.pyright]
exclude = [
    '.tox',
    '.nox',
    'tests',
    'sandbox',
    'doc',
    'scripts',
    'tmp',
]
include = ["src"]

# pyright has issues with modules imported from a root __init__.py
reportPrivateImportUsage = false

# Temp
reportGeneralTypeIssues = false
reportMissingImports = false
reportOptionalSubscript = false
